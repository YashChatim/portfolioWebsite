
@{
    ViewData["Title"] = "Projects";
}

<h1>Projects</h1>

<div class="container">
    <div class="project">
        <h2>Game - WarriorX</h2>
        <p>
            A C# OOP focused two player 2D fighting game in Windows Forms application.
            The game mechanics include horizontal movement, jumping, punching, kicking and blocking.
            The aim of the game is to reduce the opponent’s health to zero to win.
        </p>
        <a class="btn btn-primary link" href="https://github.com/YashChatim/winFormsWarriorX">GitHub</a>
    </div>

    <div class="project">
        <h2>Android app - LoLZ</h2>
        <p>
            An android application with Xamarin Forms which is a cross-platform framework. The application used
            MVVM (Model-View-ViewModel) software architectural pattern. In this application you can search for an account in
            League of Legends game which used Riot API depending on the region selected and Summoner name. The Http requests and
            responses to/from the API was handled through a class called HttpClient. Newtonsoft.Json framework was used to
            deserialize JSON data from the API and convert it into C# objects.
        </p>
        <a class="btn btn-primary link" href="https://github.com/YashChatim/lolZ">GitHub</a>
    </div>

    <div class="project">
        <h2>Database app - League of Legends</h2>
        <p>
            A database application that stores data of his most played characters from a game named League of Legends.
            The data was then retrieved from the database using Entity Framework and finally displayed in Windows
            Presentation Foundation (WPF) application.
        </p>
        <a class="btn btn-primary link" href="https://github.com/YashChatim/wpfLeagueDatabase">GitHub</a>
    </div>

    <div class="project">
        <h2>Web app - Portfolio Website</h2>
        <p>
            A web app created with .NET Core. The application used MVC (Model-View-Controller) software architectural pattern
            and Razor markup syntax to embed server-based C# code, HTML and CSS into web pages. The website consists of 5 sections
            i.e. Home, About, Skills, Projects, CV and Contact. Each section has its own Controller. The portfolio website is deployed
            on Azure and built a CI/CD (Continuous integration/Continuous deployment) pipeline with Azure resources.
        </p>
        <a class="btn btn-primary link" href="https://github.com/YashChatim/portfolioWebsite">GitHub</a>
    </div>

    <div class="project">
        <h2>Group project - Sparta Training Room</h2>
        <p>
            An e-learning ASP.NET web application similar to Treehouse group with a team consisting of 10 members.
            The application used MVC (Model-View-Controller) architectural pattern and Razor mark-up syntax to embed
            server-based C# code, HTML and CSS into web pages. Microsoft's SQL Azure Database was used to host the
            database in cloud, whereas Bootstrap was used to design the web pages. To build the complex application,
            the team used scrum as its collaborative agile development framework and distributed their work in sprints.
            To plan, track and manage their agile, and their application, the team used Jira. Git was used as their version control
            and GitHub to host their git repositories.
        </p>
        <a class="btn btn-primary link" href="https://github.com/HarryB96/SpartanTrainingRoom">GitHub</a>
    </div>
</div>

<style>
    body {
        background-color: lightgray;
        color: white;
    }

    h1 {
        text-align: center;
    }

    h2 {
        display: inline-block;
        border-bottom: 1px dashed red;
    }

    .project {
        background-color: darkgray;
        border-radius: 3%;
        margin-bottom: 2%;
    }

    h2, p, .project a {
        margin-left: 2%;
    }

    .link {
        background-color: maroon;
        margin-bottom: 1%;
    }

    .link:hover {
        background-color: orange;
    }
</style>
